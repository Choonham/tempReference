import axios from 'axios';
import {API_REQUEST_URL, AUTHORIZATION} from "./Common";

const getURLString = (url) => {
    const uuid = localStorage.getItem('uuid');
    const accessToken = localStorage.getItem('accessToken');

    return `${API_REQUEST_URL}${url}?accessToken=${accessToken}&uuid=${uuid}&`;
}

export const getPost = id => {
    return axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);
}

export const getUsers = () => axios.get(`https://jsonplaceholder.typicode.com/users`);

export const login = param => {
    return axios.get(`${API_REQUEST_URL}userLogin?LoginID=${param.name}&LoginPW=${param.password}&uuid=${param.uuid}`,{
        headers: {
            Authorization: AUTHORIZATION
        },
    });
}

export const getSimulatorList = param => {
    return axios.get(`${getURLString('userSimulatorList')}UserNo=${param.userNo}&UserID=${param.userID}&UserGrade=${param.userGrade}`);
}

export const getSimulatorInfo = async id => {
    return await axios.get(`${getURLString('getSimulatorInfo')}SimulatorID=${id}`);
}

export const getSimulatorConnStatus = async id => {
    return await axios.get(`${getURLString('simulatorConnectStatus')}SimulatorID=${id}`);
}

export const sendConnectTest = param => {
    return axios.get(`${getURLString('simulatorConnectTest')}SimulatorIP=${param.ip}&SimulatorPort=${param.port}`);
}

export const modifySimulatorInfo = param => {
    return axios.get(`${getURLString('config/setSimulatorInfo')}SimulatorID=${param.id}&IP=${param.ip}&Port=${param.port}&LoginID=${param.loginID}&LoginPW=${param.loginPW}&Note=${param.note}`);
}

export const getMainChargerList = () => {
    return axios.get(`${getURLString('mainChargerList')}`);
}

export const setTestReady = param => {
    return axios.get(`${getURLString('setTestReady')}SimulatorID=${param.id}&DeviceID=${param.deviceId}&ChargerID=${param.chargerId}&ModelNo=${param.modelNo}&ModelName=${param.modelName}&SerialNo=${param.serialNo}&Technician=${param.technician}&Resistance=${param.resistance}&Note=${param.note}`)
}

export const setSimulControl = param => {
    return axios.get(`${getURLString('setSimulControl')}SimulatorID=${param.id}&n_seq=${param.sequence}&r2_select=${param.resistor}&charge_time=${param.chargingTime}&load_value=${param.loadValue}&interval_time=${param.intervalTime}&testID=${param.testID}&event_check=${param.eventCheck}&finEnd=${param.finEnd}`);
}

export const getLastestTestInfo = id => {
    return axios.get(`${getURLString('lastestTestInfo')}SimulatorID=${id}`);
}

export const getChargerListOnly = () => {
    return axios.get(`${getURLString('config/ChargerList')}`);
}

export const getChargerInfo = id => {
    return axios.get(`${getURLString('config/ChargerInfo')}ChargerID=${id}`);
}

export const setChargerInfo = param => {
    const id = param.ChargerID ? param.ChargerID : '';

    let urlStr =`${getURLString('config/setChargerInfo')}chargerID=${id}`;

    const keys = Object.keys(param);

    keys.forEach((e, i) => {
        if(e != "ChargerID") {
            urlStr += `&itemID=${typeof param[e].id === 'undefined' ? '' : param[e].id}&item=${e}&content=${param[e].content}`;
        }
    });

    return axios.get(urlStr);
}

export const deleteChargerProperty = param => {
    return axios.get(`${getURLString('config/DeleteChargerInfo')}chargerID=${param.ChargerID}&itemID=${param.itemID}`);
}

export const deleteCharger = id => {
    return axios.get(`${getURLString('config/DeleteChargerAll')}chargerID=${id}`);
}

export const getTestResult = param => {
    return axios.post(`${getURLString('test/ResultList')}SimulatorID=${param.simulatorID}&DeviceID=${param.deviceID}&ChargerID=${param.chargerID}&SerialNo=${param.serialNo}&StartDate=${param.startDate}&EndDate=${param.endDate}&Page=${param.page}`);
}

export const getTestResultDetail = testID => {
    return axios.post(`${getURLString('test/ResultDetail')}TestID=${testID}`);
}

export const getTestResultDetailData = param => {
    return axios.post(`${getURLString('test/ResultDetailData')}TestID=${param.testID}&SequenceID=${param.sequenceID}`);
}

export const insertProcessResult = param => {
    return axios.post(`${getURLString('test/setTestEventProc')}TestID=${param.testID}&EventID=${param.eventID}&Processing=${param.processing}`);
}

