import {useTranslation} from "react-i18next";
import DatePickerComp from "../components/DatePickerComp";
import StatisticsGridComponent from "../components/StatisticsGridComponent";
import React, {useEffect, useMemo, useState} from "react";
import {getCoreRowModel, getPaginationRowModel, useReactTable} from "@tanstack/react-table";

const StatisticsPage = () => {
    const [t, i18n] = useTranslation('common');

    const bySimulatorColumns = React.useMemo(() => [
        {
            accessorKey: 'test',
            header: '시험',
        },
        {
            accessorKey: 'completed',
            header: '완료',
        },
        {
            accessorKey: 'success',
            header: '성공',
        },
        {
            accessorKey: 'failure',
            header: '실패',
        },
        {
            accessorKey: 'recentTest',
            header: '최근 시험',
        },
        {
            accessorKey: 'recentFailure',
            header: '최근 실패',
        },
    ], []);

    const bySimulatorData = React.useMemo(() => [
        { test: 'simulator1', completed: 10, success: 7, failure: 3, recentTest: '2023-01-01', recentFailure: '2023-01-02' },
        { test: 'simulator2', completed: 15, success: 10, failure: 5, recentTest: '2023-01-03', recentFailure: '2023-01-04' },
        { test: 'simulator3', completed: 25, success: 10, failure: 5, recentTest: '2023-01-03', recentFailure: '2023-01-04' },
        { test: 'simulator4', completed: 5, success: 10, failure: 5, recentTest: '2023-01-03', recentFailure: '2023-01-04' },
        { test: 'simulator5', completed: 36, success: 10, failure: 5, recentTest: '2023-01-03', recentFailure: '2023-01-04' },
        { test: 'simulator6', completed: 20, success: 15, failure: 5, recentTest: '2023-01-09', recentFailure: '2023-01-10' },
    ], []);

    const byDateColumns = useMemo(() => [
        { accessorKey: 'date', header: '날짜' },
        {
            accessorKey: 'time',
            header: '시간',
            cell: info => <div className="time-column">{info.getValue()}</div>,
        },
        { accessorKey: 'simulator', header: '시뮬레이터' },
        { accessorKey: 'chargerSerialNumber', header: '충전기 시리얼 넘버' },
        { accessorKey: 'success', header: '성공 여부' },
        { accessorKey: 'failureReason', header: '실패 사유' },
    ], []);

    const byDateData = useMemo(() => new Array(20).fill(null).map((_, index) => ({
        date: `2024-02-${10 + index}`,
        time: `${index % 24}:00`,
        simulator: `Simulator${index % 6 + 1}`,
        chargerSerialNumber: `CSN${1000 + index}`,
        success: index % 2 === 0 ? '성공' : '실패',
        failureReason: index % 2 === 0 ? '' : '임의의 실패 사유',
    })), []);

    const [simulSelectedRows, setSimulSelectedRows] = useState([]);
    const [dateSelectedRows, setDateSelectedRows] = useState([]);

    const [simulSelectedDatas, setSimulSelectedDatas] = useState([]);
    const [dateSelectedDatas, setDateSelectedDatas] = useState([]);

    useEffect(() => {
        if(simulSelectedRows.length === 0) {
            setSimulSelectedDatas([]);
            return;
        }

        simulSelectedRows.forEach((e, i) => {
            if(i === 0) {
                setSimulSelectedDatas([bySimulatorData[e]]);
            } else {
                setSimulSelectedDatas([...simulSelectedDatas, bySimulatorData[e]]);
            }
        });
    }, [simulSelectedRows]);

    useEffect(() => {

    }, [simulSelectedDatas])

    useEffect(() => {
        if(dateSelectedRows.length === 0) {
            setDateSelectedDatas([]);
            return;
        }
        dateSelectedRows.forEach((e, i) => {
            if(i === 0) {
                setDateSelectedDatas([byDateData[e]]);
            } else {
                setDateSelectedDatas([...dateSelectedDatas, byDateData[e]]);
            }
        });
    }, [dateSelectedRows]);

    return (
        <div className="masterContainer container">
            <div className="side_bar">
                <div className="side_bar_box">
                    <div className="side_bar_title">
                        <h2>{t("statistics.title")}</h2>
                    </div>
                    <div className="side_bar_con">
                        <div className={"statistic_filter_wrapper"}>
                            <div className={"statistic_period_wrapper"}>
                                <div className={"statistic_filter_title"}>Period</div>
                                <div className={"start_end_date"}>
                                    <DatePickerComp
                                        className="form-control datepicker"
                                        id="statistic_datePicker1"
                                        style={{
                                            width: '100%',
                                            margin: '3px',
                                            height: '0.3rem',
                                        }}
                                        handleChange={(e)=>{
                                        }}
                                        /*dateSet={}
                                        disabledKeyboardNavigation placeholderText={t('view.startDate')}*/
                                    />
                                </div>
                                <div style={{
                                    fontSize: '16px',
                                    color: 'white',
                                    textAlign: 'center'
                                }}>-</div>
                                <div className={"start_end_date"}>
                                    <DatePickerComp
                                        className="form-control datepicker"
                                        id="statistic_datePicker2"
                                        style={{
                                            width: '100%',
                                            margin: '3px',
                                            height: '0.3rem',
                                        }}
                                        handleChange={(e)=>{
                                        }}
                                        /*dateSet={}
                                        disabledKeyboardNavigation placeholderText={t('view.startDate')}*/
                                    />
                                </div>
                            </div>
                            <div className={"statistic_simulator_wrapper"}>
                                <div className={"statistic_filter_title"}>Simulator</div>
                                <select
                                    className="form-select"
                                    title="simulator"
                                >
                                    <option value="">{t('view.all')}</option>
                                </select>
                            </div>
                            <div className={"statistic_filter_button"} style={{
                                textAlign: 'right',
                                margin: '10px'
                            }}>
                                <button type="button" className="btn btn_black" title="Confirm"
                                        onClick={() => {}}
                                >Confirm</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div className="contents_wrap scrollbar_custom">
                <div className="contents">
                    <div className="contents_box">
                        <div className="statistic_header">
                            <div className="statistic_header_simulator">
                                <div className="header_label">
                                    Simulator:
                                </div>
                                <div className="header_simulator">
                                    Simulator1
                                </div>
                            </div>
                            <div className="statistic_header_period">
                                <div className="header_label">
                                    Period:
                                </div>
                                <div className="header_period">
                                    2024-01-01 ~ 2024-01-31
                                </div>
                            </div>
                        </div>
                        <div className="statistic_body">
                            <div className="statistic_info">
                                <div className="info_box">총 시험: n 건</div>
                                <div className="info_box">완료: n건</div>
                                <div className="info_box">성공: n 건</div>
                                <div className="info_box">실패: n건</div>
                            </div>
                            <div className="grid_and_graph_wrapper">
                                <div className="grid_label">
                                    ◎ 시뮬레이터 통계
                                </div>
                                <StatisticsGridComponent
                                    columns={bySimulatorColumns}
                                    data={bySimulatorData}
                                    needPaging={false}
                                    selectedRowIds={simulSelectedRows}
                                    setSelectedRowIds={setSimulSelectedRows}
                                />
                                <div className="grid_label">
                                    ◎ 시험 통계
                                </div>
                                <StatisticsGridComponent
                                    columns={byDateColumns}
                                    data={byDateData}
                                    needPaging={true}
                                    selectedRowIds={dateSelectedRows}
                                    setSelectedRowIds={setDateSelectedRows}
                                />
                                <div className="graph_area">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default StatisticsPage;
