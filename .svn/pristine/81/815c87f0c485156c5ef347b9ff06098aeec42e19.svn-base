import {useDispatch, useSelector} from "react-redux";
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { fas } from '@fortawesome/free-solid-svg-icons';
import { library } from '@fortawesome/fontawesome-svg-core';
import {addEventLog, getAllEventLogs, setEventLogCurrPage} from "../state_modules/eventLogState";
import {useEffect, useState} from "react";
import {useTranslation} from "react-i18next";
import DatePickerComp from "../components/DatePickerComp";

const EventLogPage = ({simulatorId, eventLogId}) => {
    const currPage = useSelector(state => state.eventLogState.currentPage);
    const eventLogs = useSelector(state => state.eventLogState.filteredData);
    const totalPage = useSelector(state => state.eventLogState.totalPage);

    const dispatch = useDispatch();

    const getPageData = (t) => dispatch(getAllEventLogs(t));
    const setCurrPage = (t) => dispatch(setEventLogCurrPage(t));

    useEffect(() => {
        getPageData(currPage);
    }, [currPage]);

    const [startDate, setStartDate] = useState(new Date());

    const [t, i18n] = useTranslation('common');

    library.add(fas);

    return (
        <div className="contents_wrap_2">
           <div className={"contents"}>
                <div className="contents_box">
                    <div className="table_search_wrap">
                        <div className="table_input_title">
                            <h4>{t("view.eventLog")}</h4>
                        </div>
                        <div className="table_input_contents">
                            <div className="table_input ti_1_3">
                                <div className="table_input_th">{t("view.simulator")}</div>
                                <div className="table_input_td">
                                    <select className="form-select" title={t("view.selectSimulator")}>
                                        <option defaultValue="1">{t("view.all")}</option>
                                    </select>
                                </div>
                            </div>
                            <div className="table_input ti_1_3">
                                <div className="table_input_th">{t("view.simulatorNo")}</div>
                                <div className="table_input_td">
                                    <input type="text" className="form-control" placeholder={t("view.enterSimulatorNo")}
                                           title={t("view.enterSimulatorNo")}/>
                                </div>
                            </div>
                            <div className="table_input ti_1_3">
                                <div className="table_input_th">{t("view.chargerModel")}</div>
                                <div className="table_input_td">
                                    <select className="form-select" title={t("view.selectChargerModel")}>
                                        <option defaultValue="1">{t("view.all")}</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div className="table_input_contents">
                            <div className="table_input ti_1_3">
                                <div className="table_input_th">{t("view.chargerSN")}</div>
                                <div className="table_input_td">
                                    <input type="text" className="form-control" placeholder={t("view.enterChargerSN")} title={t("view.enterChargerSN")}/>
                                </div>
                            </div>
                            <div className="table_input ti_2_3">
                                <div className="table_input_th">{t("view.testDate")}</div>
                                <div className="table_input_td table_input_datepicker">
                                    <DatePickerComp className="form-control datepicker" id="datepicker_input_1"  title={t("view.startDate")}/>
                                    &nbsp;~&nbsp;
                                        <DatePickerComp className="form-control datepicker" id="datepicker_input_2" title={t("view.endDate")}/>
                                            <div className="dp_btn">
                                                <button type="button" className="btn btn_grey" title="1W">1W</button>
                                                <button type="button" className="btn btn_grey" title="1M">1M</button>
                                                <button type="button" className="btn btn_grey" title="3M">3M</button>
                                                <button type="button" className="btn btn_grey" title="6M">6M</button>
                                            </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div className="contents_btn">
                        <button type="button" className="btn btn_blue ml_auto" title={t("view.search")}>{t("view.search")}</button>
                    </div>
                    <div className="table_wrap">
                        <div className="table_responsive">
                            <table className="table">
                                <caption>{t("view.viewEventLog")}</caption>
                                <colgroup>
                                    <col width="4%"/>
                                    <col width="10%"/>
                                    <col width="9%"/>
                                    <col width="13%"/>
                                    <col width="13%"/>
                                    <col width="13%"/>
                                    <col width="*"/>
                                    <col width="4%"/>
                                </colgroup>
                                <thead>
                                <tr>
                                    <th scope="col" className="text-center">{t("view.no")}</th>
                                    <th scope="col" className="text-center">{t("view.testDateTime")}</th>
                                    <th scope="col" className="text-center">{t("view.testEquipment")}</th>
                                    <th scope="col" className="text-center">{t("view.charger")}</th>
                                    <th scope="col" className="text-center">{t("view.mode")}</th>
                                    <th scope="col" className="text-center">{t("description.des")}</th>
                                    <th scope="col" className="text-center">{t("setting.content")}</th>
                                    <th scope="col" className="text-center">{t("view.popUp")}</th>
                                </tr>
                                </thead>
                                <tbody>
                                {
                                    eventLogs.length === 0 ?
                                        <tr>
                                            <td colSpan={8} className="text-center">{t("view.nothingToDisplay")}</td>
                                        </tr> :
                                        eventLogs.map((eventLog) => {
                                            return simulatorId === eventLog.simulatorID && eventLogId === eventLog.id ? (
                                                <tr>
                                                    <td className="text-center">{eventLog.index}</td>
                                                    <td className="text-center">{eventLog.date}</td>
                                                    <td className="text-center">{eventLog.simulatorName}</td>
                                                    <td className="text-center">{eventLog.chargerName}</td>
                                                    <td className="text-center">{eventLog.mode}</td>
                                                    <td className="text-center"></td>
                                                    <td className="text-center">{eventLog.description}</td>
                                                    <td className="text-center btn_popup">{eventLog.detail === null ? "" : (
                                                        <button type="button" className="btn">
                                                            <img src="style/img/sub/img_files.png" alt={t("view.popUp")}/>
                                                        </button>
                                                    )}</td>
                                                </tr>
                                            ) : null
                                        })
                                }
                                </tbody>
                            </table>
                        </div>
                        {
                            totalPage === 0 ?
                                (<div className="pagination_wrap"></div>) :
                                (<div className="pagination_wrap">
                                    <ul className="pagination">
                                        <li className="disabled">
                                            <a href="#" className="prev" aria-label="Previous">
                                                <span><img src="style/img/sub/img_prev_arrow.png" alt={t("view.previous")}/></span>
                                            </a>
                                        </li>
                                        {Array.from({ length: totalPage }, (_, index) => (
                                            <li className={`${index === currPage ? 'on' : ''}`}>
                                                <a
                                                    href="#"
                                                    key={index}
                                                    onClick={() => setCurrPage(index)}
                                                >
                                                    {index + 1}
                                                </a>
                                            </li>
                                        ))}
                                        <li>
                                            <a href="#" className="next" aria-label="Next">
                                                <span><img src="style/img/sub/img_next_arrow.png" alt={t("view.next")}/></span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>)
                        }
                    </div>
                </div>
           </div>
        </div>
       /* <div className={"pageWrapper"}>
            <div className="searchFieldWrapper">
                <div className="selectBoxWrapper">
                    <div className="firstRow">
                        <label htmlFor="select1">시뮬레이터</label>
                        <select id="select1">
                            <option>전체</option>
                        </select>
                        <label htmlFor="select2">시뮬레이터 번호</label>
                        <input type="text" id="text"/>
                        <label htmlFor="select3">충전기 모델</label>
                        <select id="select3">
                            <option>전체</option>
                        </select>
                    </div>
                    <div className="secondRow">
                        <label htmlFor="text1">충전기 S/N</label>
                        <input type="text" id="text1"/>
                        <label htmlFor="startDate">시험일 </label>
                        <input type="date" id="startDate"/>
                        <label htmlFor="endDate"> ~ </label>
                        <input type="date" id="endDate"/>
                    </div>
                </div>
                <div className="searchButtonWrapper">
                    <button>Search</button>
                </div>
            </div>
            <div className={"eventLogTableWrapper"}>
                <table className="blue-table">
                    <thead>
                    <tr>
                        <th className={"x-sm"}>번호</th>
                        <th className={"sm"}>시험일시</th>
                        <th className={"sm"}>시험장비</th>
                        <th className={"md"}>충전기</th>
                        <th className={"md-4"}>모드</th>
                        <th className={"large"}>설명</th>
                        <th className={"x-large"}>내용</th>
                        <th className={"xx-sm"}></th>
                    </tr>
                    </thead>
                    <tbody>
                    {
                        eventLogs.length === 0 ?
                            <tr>
                                <td colSpan={8}>표시할 데이터가 없습니다.</td>
                            </tr> :
                            eventLogs.map((eventLog) => {
                                return (
                                    <tr>
                                        <td>{eventLog.index}</td>
                                        <td>{eventLog.date}</td>
                                        <td>{eventLog.simulatorName}</td>
                                        <td>{eventLog.chargerName}</td>
                                        <td>{eventLog.mode}</td>
                                        <td>{eventLog.description}</td>
                                        <td>{eventLog.detail}</td>
                                        <td></td>
                                    </tr>
                                )
                            })
                    }
                    </tbody>
                </table>
                {
                    totalPage === 0 ?
                        (<div className="pagination"></div>) :
                        (<div className="pagination">
                            <a href="#" className="page-link"><FontAwesomeIcon icon="fa-solid fa-caret-left" style={{color: "#619bff",}} /> </a>
                            {Array.from({ length: totalPage }, (_, index) => (
                                <a
                                    href="#"
                                    key={index}
                                    className={`page-link${index === currPage ? ' active' : ''}`}
                                    onClick={() => setCurrPage(index)}
                                >
                                    {index + 1}
                                </a>
                            ))}
                            <a href="#" className="page-link"> <FontAwesomeIcon icon="fa-solid fa-caret-right" style={{color: "#619bff",}} /></a>
                        </div>)
                    }
            </div>
        </div>*/
    )
}

export default EventLogPage;