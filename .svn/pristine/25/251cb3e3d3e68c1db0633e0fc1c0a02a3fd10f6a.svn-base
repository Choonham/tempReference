import {useTranslation} from "react-i18next";
import {useDispatch, useSelector} from "react-redux";
import {useEffect, useState} from "react";
import {updateChargerInfo} from "../state_modules/simulatorInfoState";

const ChargerSettingComp = ({simulator, handleClose}) => {
    const [t, i18n] = useTranslation('common');

    const dispatch = useDispatch();

    const chargers = useSelector(state => state.chargerInfoState.chargers);
    const onUpdateChargerInfo = chargerInfo => dispatch(updateChargerInfo(chargerInfo));
    const [selected, setSelected] = useState(0);

    const [info, setInfo] = useState({
        id: 0,
        modelNo: '',
        modelName: '',
        serialNo: '',
        testMode: 0,
        comment: ''
    });

    useEffect(() => {
        setSelected(0);
    }, []);

    useEffect(() => {
        const charger = chargers[selected];
        setInfo({
            ...charger
        });
    }, [selected]);

    useEffect(() => {
        makeInfoBlock();
    }, [info])

    const [rtnBlock, setRtnBlock] = useState();

    const makeInfoBlock = () => {
        const keys = Object.keys(info);
        const values = keys.map(key => info[key]);

        const rtnBlock = values.map((e, i) => (
            keys[i] === "id"  || keys[i] === "isDone" ? '' :
                keys[1] === "index" ? '' :
                    keys[i] === "modelNo" ?
                        <div className="table_input" key={i}>
                            <div className="table_input_th">{t("config.modelNo")}</div>
                            <div className="table_input_td">
                                <input
                                    type="text"
                                    className="form-control"
                                    placeholder={t("config.enterModelNo")}
                                    title={t("config.enterModelNo")}
                                    defaultValue={info.modelNo}
                                />
                            </div>
                        </div> :
                        keys[i] === "modelName" ?
                            <div className="table_input" key={i}>
                                <div className="table_input_th">{t("config.modelName")}</div>
                                <div className="table_input_td">
                                    <input
                                        type="text"
                                        className="form-control"
                                        placeholder={t("config.enterModelName")}
                                        title={t("config.enterModelName")}
                                        defaultValue={info.modelName}
                                    />
                                </div>
                            </div> :
                            keys[i] === "serialNo" ?
                                <div className="table_input" key={i}>
                                    <div className="table_input_th">시리얼 넘버</div>
                                    <div className="table_input_td">
                                        <input
                                            type="text"
                                            className="form-control"
                                            placeholder="시리얼 번호 입력"
                                            title="시리얼 번호 입력"
                                            defaultValue={info.serialNo}
                                        />
                                    </div>
                                </div> :
                                keys[i] === "testMode" ?
                                    <div className="table_input" key={i}>
                                        <div className="table_input_th">테스트 모드</div>
                                        <div className="table_input_td">
                                            <select className="form-select" title="테스트 모드" value={info.testMode}
                                                onChange={(e) => {
                                                    setInfo({
                                                        ...info,
                                                        testMode: Number(e.target.value)
                                                    })
                                                }}
                                            >
                                                <option defaultValue={0}>Full</option>
                                                <option defaultValue={1}>Normal</option>
                                            </select>
                                        </div>
                                    </div> :
                                    <div className="table_input" key={i}>
                                        <div className="table_input_th">{keys[i]}</div>
                                        <div className="table_input_td">
                                            <input
                                                type="text"
                                                className="form-control"
                                                placeholder={keys[i]}
                                                title= {keys[i]}
                                                defaultValue={info[keys[i]]}
                                            />
                                        </div>
                                    </div>
        ));

        setRtnBlock(rtnBlock);
    }

    return (
        <div className="contents_box">
            <div className="table_input_wrap">
                <div className="table_input_title table_input_title_btn">
                    <h4>{t("config.enterInfo")}</h4>
                </div>
                <div className="table_input_contents">
                    <div className="table_input">
                        <div className="table_input_th">모델 선택</div>
                        <div className="table_input_td">
                            <select className="form-select" title="모델 선택" defaultValue={selected}
                                    onChange={(e) => {
                                        setSelected(Number(e.target.value));
                                    }}
                            >
                                {chargers.map((e, i) => (
                                    <option defaultValue={i} key={i}>{e.modelNo}</option>
                                ))}
                            </select>
                        </div>
                    </div>
                    {
                        rtnBlock
                    }
                </div>
            </div>
            <div className="contents_btn">
                <button type="button" className="btn btn_blue ml_auto" title={t("config.confirm")}
                        onClick={() => {
                            onUpdateChargerInfo({
                                id: simulator.id,
                                chargerId: selected,
                                chargerTestMode: info.testMode
                            });
                            handleClose();
                        }}
                >{t("config.confirm")}</button>
                <button type="button" className="btn btn_grey ml_4" title={t("config.cancel")} onClick={() => {
                    handleClose();
                }}>{t("config.cancel")}</button>
            </div>
        </div>
    )
}

export default ChargerSettingComp;